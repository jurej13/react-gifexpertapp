{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,0FAC4EC,UAAUH,GADtF,sBAEKI,MAAMF,GAFX,cAEZG,EAFY,gBAGGA,EAASC,OAHZ,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAYXM,GAZW,4CAAF,sDCEPO,EAAc,SAAC,GAAwB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAErC,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCDnBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAK3B,CAACpB,IAEIqB,EDfwBK,CAAc1B,GAAhCa,EADwB,EAC7BN,KAAYa,EADiB,EACjBA,QAGpB,OACA,qCACI,6BAAMpB,IACLoB,GAAY,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAGSH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEfhBgB,EAAe,WAAM,MAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAa9B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACK2C,EAAWnB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MClBrB6B,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.7cbbdb32.chunk.js","sourcesContent":["\r\nimport React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = ( e )=>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('')   \r\n        }\r\n        \r\n    \r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs =async (category) => {\r\n    const url= `https://api.giphy.com/v1/gifs/search?api_key=Xfkl24O1dZjFaLpgaqpRCw89hM1Mf4Y8&q=${encodeURI(category)}&limit=10`\r\n    const response = await fetch(url)\r\n    const {data} = await response.json();\r\n    \r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return(gifs);\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} )  => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//El encodeURI lo que hace es sacar espacios y todo lo que me puyeda molestar a la hora de hacer la peticion\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images,loading} = useFetchGifs( category );\r\n    // const {data , loading} = useFetchGifs( category )\r\n   \r\n    return (\r\n    <>\r\n        <h3>{ category }</h3>\r\n        {loading  && <p className='animate__animated animate__flash'>Loading</p>}\r\n        <div className='card-grid'>\r\n            \r\n            \r\n                {images.map(img=>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    { ...img } />\r\n                ))}\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {  useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    }); \r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                \r\n                    \r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n                \r\n                \r\n            })\r\n    },[category])\r\n    \r\n    return state;   \r\n\r\n}\r\n","import {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    // const categories=['One punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['One punch'])\r\n    \r\n    // const handleAdd=()=>{\r\n    //     // codigo para agregar a un state, array o lo necesario\r\n    //     // dos formas de hacer el add\r\n    //     setCategories(['HunterXHunter',...categories])\r\n    //     // setCategories(cats=>[...cats, 'HunterXHunter'])\r\n    //     console.log(categories)\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories={ setCategories } />\r\n          <hr/>\r\n          \r\n          <ol>\r\n              {categories.map(category=>(\r\n                <GifGrid\r\n                key={category} \r\n                category={category} />\r\n              ))}\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}